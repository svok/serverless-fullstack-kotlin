service: temedis-com-static

provider:
  name: aws
  runtime: java8
  stage: ${opt:stage}
  versionFunctions: false

#plugins:
#  - serverless-finch
#  - serverless-domain-manager

#custom:
#  client:
#    bucketName: ${opt:domain}.${self:provider.stage}.static
#    distributionFolder: web
#    indexDocument: index.html
#    errorDocument: error.html
#
#  customDomain:
#    domainName: ${self:provider.stage}.${opt:domain}
#    certificateArn: ${opt:domain-cert}
#    basePath: '/' # This will be prefixed to all routes
#    stage: ${self:provider.stage}
#    createRoute53Record: true

#resources:
#  Resources:
#    StaticSite:
#      Type: AWS::S3::Bucket
#      Properties:
#        AccessControl: PublicRead
#        BucketName: ${self:custom.client.bucketName}
#        WebsiteConfiguration:
#          IndexDocument: index.html
#          ErrorDocument: error.html
#    # specifying the policies to make sure all files inside the Bucket are avaialble
#    WebAppS3BucketPolicy:
#      Type: AWS::S3::BucketPolicy
#      Properties:
#        Bucket:
#          Ref: StaticSite
#        PolicyDocument:
#          Statement:
#            - Sid: PublicReadGetObject
#              Effect: Allow
#              Principal: '*'
#              Action:
#                - s3:GetObject
#              Resource: arn:aws:s3:::${self:custom.client.bucketName}/*

frontStatic:
  component: "@serverless/website"
  inputs:
    code: ./web
