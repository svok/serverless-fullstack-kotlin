service: ${opt:service}

plugins:
  - serverless-s3-sync

provider:
  name: aws
  runtime: java8
  stage: ${opt:stage}
  versionFunctions: false

package:
  artifact: ${opt:jar}

functions:
  hello:
    handler: com.serverless.Handler
    events:
      - http:
          path: api/hello
          method: get
custom:
  siteName: ${self:provider.stage}.${opt:domain}
  s3Sync:
    - bucketName: ${self:custom.siteName}-static
      localDir: build/web-static
      acl: public-read # optional
      followSymlinks: true # optional
      defaultContentType: text/html # optional
#      params: # optional
#        - index.html:
#            CacheControl: 'no-cache'
#        - "*.js":
#            CacheControl: 'public, max-age=31536000'

    - bucketName: ${self:custom.siteName}-spa
      bucketPrefix: spa/ # optional
      localDir: build/web-spa
      acl: public-read # optional
      followSymlinks: true # optional
      defaultContentType: text/html # optional

    - bucketName: ${self:custom.siteName}-logs
      followSymlinks: true # optional

resources:
  Resources:
    StaticSiteBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.siteName}-static
        AccessControl: PublicRead
        WebsiteConfiguration:
          IndexDocument: index.html
          ErrorDocument: error.html

    SpaSiteBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.siteName}-spa
        AccessControl: PublicRead
        WebsiteConfiguration:
          IndexDocument: index.html
          ErrorDocument: index.html

    WebsiteDistribution:
      Type: 'AWS::CloudFront::Distribution'
      Properties:
        DistributionConfig:
          DefaultCacheBehavior:
            TargetOriginId: 'StaticSiteBucketOrigin'
            ViewerProtocolPolicy: 'redirect-to-https'
            DefaultTTL: 600 # ten minutes
            MaxTTL: 600 # ten minutes
            Compress: true
            ForwardedValues:
              QueryString: false
              Cookies:
                Forward: 'none'
          DefaultRootObject: 'index.html'
          Enabled: true
          PriceClass: 'PriceClass_100'
          HttpVersion: 'http2'
          ViewerCertificate:
            AcmCertificateArn: >-
              ${opt:domain-cert}
            SslSupportMethod: sni-only
            MinimumProtocolVersion: TLSv1.2_2018
          Aliases:
            - ${self:custom.siteName}
#          Logging:
#            IncludeCookies: 'false'
#            Bucket: ${self:custom.siteName}-logs.s3.amazonaws.com
#            Prefix: fullstack
          Origins:
            -
              Id: 'StaticSiteBucketOrigin'
              DomainName: { 'Fn::GetAtt': [ 'StaticSiteBucket', 'DomainName' ] }
              S3OriginConfig: {}
            -
              Id: 'SpaSiteBucketOrigin'
              DomainName: { 'Fn::GetAtt': [ 'SpaSiteBucket', 'DomainName' ] }
              OriginPath: ""
              S3OriginConfig: {}
